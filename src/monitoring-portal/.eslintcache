[{"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/index.js":"1","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/reportWebVitals.js":"2","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/App.js":"3","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/CameraView.js":"4","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/AppLayout.js":"5","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/AlarmTable.js":"6","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/ImagePanel.js":"7","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/ImageModal.js":"8","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/utils/s3utils.js":"9"},{"size":478,"mtime":1611141397256,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611112086250,"results":"12","hashOfConfig":"11"},{"size":1906,"mtime":1616381006417,"results":"13","hashOfConfig":"11"},{"size":1818,"mtime":1616381006417,"results":"14","hashOfConfig":"11"},{"size":1367,"mtime":1616214541591,"results":"15","hashOfConfig":"11"},{"size":4560,"mtime":1616219663844,"results":"16","hashOfConfig":"11"},{"size":348,"mtime":1616214470805,"results":"17","hashOfConfig":"11"},{"size":1259,"mtime":1616339553388,"results":"18","hashOfConfig":"11"},{"size":782,"mtime":1616381021056,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14js8g0",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/index.js",[],"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/reportWebVitals.js",[],"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/App.js",["40"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NorthStarThemeProvider from \"aws-northstar/components/NorthStarThemeProvider\";\nimport Amplify, { Auth } from \"aws-amplify\";\nimport AppLayout from \"./components/AppLayout\";\nimport AlarmTable  from \"./components/AlarmTable\";\nimport CameraView from \"./components/CameraView\";\nimport { AmplifyAuthenticator } from \"@aws-amplify/ui-react\";\nimport { useState, useEffect } from \"react\";\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\";\n\nconst settings = window.portalSettings || {};\n\nAmplify.configure({\n  Auth: {\n    identityPoolId: settings.identityPoolId,\n    region: settings.region,\n    userPoolId: settings.userPoolId,\n    userPoolWebClientId: settings.userPoolWebClientId,\n  },\n  aws_appsync_graphqlEndpoint: settings.graphqlEndpoint,\n  aws_appsync_region: settings.region,\n  aws_appsync_authenticationType: \"AWS_IAM\",\n});\n\nconst withLayout = (Component) => (props) => (\n  <AppLayout>\n    <Component {...props} />\n  </AppLayout>\n);\n\nconst App = () => {\n  const [authState, setAuthState] = useState();\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    onAuthUIStateChange(async (nextAuthState, authData) => {\n      setAuthState(nextAuthState);\n      setUser(authData);\n      // console.log(authData);\n      const session = await Auth.currentSession();\n      // console.log(session.getIdToken().getJwtToken());\n    });\n  }, []);\n\n\n  return authState === AuthState.SignedIn && user ? (\n    <NorthStarThemeProvider>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/cameraview\"\n            component={withLayout(CameraView)}\n          ></Route>\n          <Route exact path=\"/\" component={withLayout(AlarmTable)}></Route>\n        </Switch>\n      </Router>\n    </NorthStarThemeProvider>\n  ) : (\n    <AmplifyAuthenticator />\n  );\n};\n\nexport default App;\n","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/CameraView.js",[],"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/AppLayout.js",[],"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/AlarmTable.js",["41"],"import React, { useCallback, useState, useEffect } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport Table from \"aws-northstar/components/Table\";\nimport StatusIndicator from \"aws-northstar/components/StatusIndicator\";\nimport Button from \"aws-northstar/components/Button\";\nimport Inline from \"aws-northstar/layouts/Inline\";\nimport ImageModal from \"./ImageModal\";\nimport { initialize } from \"../utils/s3utils\";\n\nconst listAlarms = ` query ListAlarm($count: Int, $nextToken: String) {\n    listAlarm(count: $count, nextToken: $nextToken) {\n      alarms {\n        cameraId\n        ts\n        status\n        s3url\n        persons {\n          id\n        }\n      }\n      nextToken\n    }\n}`;\n\nconst AlarmTable = () => {\n  const [loading, setLoading] = useState(false);\n  const [alarmList, setAlarmList] = useState([]);\n  const [nextToken, setNextToken] = useState(\"\");\n  const [s3, setS3] = useState(null);\n\n  useEffect(() => {\n    initialize().then((s3) => {\n      setS3(s3);\n    });\n  }, []);\n\n  const columnDefinitions = [\n    {\n      id: \"status\",\n      width: 100,\n      Header: \"Status\",\n      accessor: \"status\",\n      Cell: ({ row }) => {\n        if (row && row.original) {\n          const status = row.original.status;\n          switch (status) {\n            case \"enabled\":\n              return (\n                <StatusIndicator statusType=\"negative\">Active</StatusIndicator>\n              );\n            case \"disabled\":\n              return (\n                <StatusIndicator statusType=\"positive\">\n                  Inactive\n                </StatusIndicator>\n              );\n            default:\n              return null;\n          }\n        }\n        return row.id;\n      },\n    },\n    {\n      id: \"cameraId\",\n      width: 200,\n      Header: \"Camera Id\",\n      accessor: \"cameraId\",\n    },\n    {\n      id: \"time\",\n      width: 200,\n      Header: \"Time\",\n      accessor: \"time\",\n    },\n    {\n      id: \"image\",\n      width: 100,\n      Header: \"Image\",\n      accessor: \"s3url\",\n      Cell: ({ row }) => {\n        if (row && row.original) {\n          const s3key = row.original.s3url;\n          return <ImageModal s3={s3} s3url={s3key} />;\n        }\n      },\n    },\n    {\n      id: \"noViolations\",\n      width: 100,\n      Header: \"No. of violations\",\n      accessor: \"noViolations\",\n    },\n  ];\n\n  const tableActions = (\n    <Inline>\n      <Button variant=\"primary\" onClick={() => alert(\"Dismiss button clicked\")}>\n        Dismiss\n      </Button>\n      <Button variant=\"normal\" onClick={() => fetchNextAlarmList(25, nextToken)}>\n        Next Page\n      </Button>\n    </Inline>\n  );\n\n  const handleAlarmData = (alarmsRes) => {\n    const alarms = alarmsRes.data.listAlarm.alarms;\n    setNextToken(alarmsRes.data.listAlarm.nextToken);\n    const transformedAlarms = alarms.map((alm) => {\n      const newAlarm = {};\n      newAlarm.cameraId = alm.cameraId;\n      const date = new Date(parseInt(alm.ts));\n      newAlarm.time = date.toISOString();\n      newAlarm.status = alm.status;\n      newAlarm.noViolations = alm.persons.length;\n      newAlarm.s3url = alm.s3url;\n      return newAlarm;\n    });\n    setAlarmList(transformedAlarms);\n    setLoading(false);\n  };\n\n  const fetchNextAlarmList = async (count = 25, nextToken) => {\n    setLoading(true);\n    try {\n      const alarmsRes = await API.graphql(\n        graphqlOperation(listAlarms, {\n          count,\n          nextToken,\n        })\n      );\n      handleAlarmData(alarmsRes);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching alarm from AppSync\");\n      console.error(error);\n    }\n  };\n\n  const fetchAlarms = useCallback(async (options) => {\n    setLoading(true);\n    try {\n      const alarmsRes =\n        nextToken === \"\"\n          ? await API.graphql(\n              graphqlOperation(listAlarms, { count: options.pageSize })\n            )\n          : await API.graphql(\n              graphqlOperation(listAlarms, {\n                count: options.pageSize,\n                nextToken,\n              })\n            );\n        handleAlarmData(alarmsRes);\n    } catch (error) {\n      setLoading(false);\n      console.error(\"Error fetching alarm from AppSync\");\n      console.error(error);\n    }\n  }, []);\n\n  return (\n    <Table\n      actionGroup={tableActions}\n      columnDefinitions={columnDefinitions}\n      loading={loading}\n      items={alarmList}\n      disableFilters={true}\n      pageSizes={[25]}\n      errorText=\"Error fetching alarms from AppSync, try again later\"\n      onFetchData={fetchAlarms}\n    />\n  );\n};\n\nexport default AlarmTable;\n","/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/ImagePanel.js",[],"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/components/ImageModal.js",[],"/Users/gaiuscyw/Projects/video-analytics-for-ppe-compliance/backend/src/monitoring-portal/src/utils/s3utils.js",[],{"ruleId":"42","severity":1,"message":"43","line":40,"column":13,"nodeType":"44","messageId":"45","endLine":40,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":161,"column":6,"nodeType":"48","endLine":161,"endColumn":8,"suggestions":"49"},"no-unused-vars","'session' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'nextToken'. Either include it or remove the dependency array.","ArrayExpression",["50"],{"desc":"51","fix":"52"},"Update the dependencies array to be: [nextToken]",{"range":"53","text":"54"},[4211,4213],"[nextToken]"]